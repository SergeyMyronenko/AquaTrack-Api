{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "User and Water API",
    "description": "API для управления пользователями и водным потреблением"
  },
  "servers": [
    {
      "url": "https://aquatrack-api-crcb.onrender.com",
      "description": "Main server"
    }
  ],
  "paths": {
    "/api/users/google": {
  "get": {
    "tags": ["User Management"],
    "summary": "Google authentication",
    "responses": {
      "200": {
        "description": "Redirect to Google",
        "content": {
              "application/json": {
                "example": {
                  "message": "Redirect back from Google"
                }
              }
            } 
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "example": {
              "error": "Internal Server Error",
              "message": "An unexpected error occurred"
            }
          }
        }
      }
    }
  }
},
"/api/users/google-redirect": {
  "get": {
    "tags": ["User Management"],
    "summary": "Google authentication redirect",
    "responses": {
      "200": {
        "description": "Redirect back from Google",
       "content": {
              "application/json": {
                "example": {
                  "message": "Redirect back from Google"
                }
              }
            } 
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "example": {
              "error": "Internal Server Error",
              "message": "An unexpected error occurred"
            }
          }
        }
      }
    }
  }
},
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user and sends a verification email.",
        "tags": ["User Management"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password."
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "The registered user's email address."
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "description": "The access token for the newly registered user."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "The refresh token for the newly registered user."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating what went wrong."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating the user already exists."
                    }
                  }
                }
              }
            }
          }
        }
      
    }
  },
    "/api/users/login": {
      "post": {
        "tags": ["User Management"],
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "example": {
                  "summary": "Example login request",
                  "value": {
                    "email": "john.doe@example.com",
                    "password": "securepassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad Request",
                  "message": "Invalid email or password format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "Invalid email or password, or account not verified"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/refresh": {
      "get": {
        "summary": "Refresh user tokens",
        "description": "Refreshes the access and refresh tokens for the currently authenticated user.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The new access token."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "The new refresh token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating unauthorized access."
                    }
                  }
                }
              }
            }
          }
        }
      
    }
  },
    "/api/users/logout": {
      "post": {
        "tags": ["User Management"],
        "summary": "Logout a user",
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "User logged out successfully"
                }
              }
            } 
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "User not authenticated"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "summary": "Get current user information",
        "tags": ["User Management"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60b8c49f6c3e3a1f5c8b4567"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "http://example.com/avatar.jpg"
                    },
                    "gender": {
                      "type": "string",
                      "example": "male"
                    },
                    "weight": {
                      "type": "number",
                      "example": 75
                    },
                    "activeTime": {
                      "type": "number",
                      "example": 30
                    },
                    "liters": {
                      "type": "number",
                      "example": 2.5
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    
  },
    "/api/users/{userId}": {
      "put": {
        "tags": ["User Management"],
        "summary": "Update user information",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad Request",
                  "message": "Invalid input"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "User not authorized to update"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not Found",
                  "message": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
  "get": {
    "tags": ["User Management"],
    "summary": "Get all users",
    "responses": {
      "200": {
        "description": "Users retrieved successfully",
        "content": {
              "application/json": {
                "example": {
                  "message": "Users retrieved successfully"
                }
              }
            } 
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "example": {
              "error": "Unauthorized",
              "message": "User not authenticated"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "example": {
              "error": "Internal Server Error",
              "message": "An unexpected error occurred"
            }
          }
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ]
  }
},


"/api/water": {
  "post": {
    "tags": ["Water Management"],
    "summary": "Create water data",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/WaterData"
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Water data created successfully",
        "content": {
              "application/json": {
                "example": {
                  "message": "Water data created successfully"
                }
              }
            } 
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "example": {
              "error": "Bad Request",
              "message": "Invalid input"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "example": {
              "error": "Unauthorized",
              "message": "Unauthorized"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "example": {
              "error": "Internal Server Error",
              "message": "An unexpected error occurred"
            }
          }
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ]
  }
},
    "/api/water/{id}": {
      "delete": {
        "tags": ["Water Management"],
        "summary": "Delete water data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the water data to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Water data deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Water data deleted successfully"
                }
              }
            } 
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad Request",
                  "message": "Invalid input"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not Found",
                  "message": "Water data not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Water Management"],
        "summary": "Update water data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the water data to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water data updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Water data updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad Request",
                  "message": "Invalid input"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Not Found",
                  "message": "Water data not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/water/": {
      "get": {
        "tags": ["Water Management"],
        "summary": "Get summary amount of water data",
        "responses": {
          "200": {
            "description": "Summary amount retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Summary amount retrieved successfully"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/water/day/{date}": {
      "get": {
        "tags": ["Water Management"],
        "summary": "Get water data for a specific day",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date to retrieve water data for (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Water data retrieved successfully for the day",
            "content": {
              "application/json": {
                "example": {
                  "message": "Water data retrieved successfully for the day"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad Request",
                  "message": "Invalid input"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/water/month/{date}": {
      "get": {
        "tags": ["Water Management"],
        "summary": "Get water data for a specific month",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Month to retrieve water data for (YYYY-MM)"
          }
        ],
        "responses": {
          "200": {
            "description": "Water data retrieved successfully for the month",
            "content": {
              "application/json": {
                "example": {
                  "message": "Water data retrieved successfully for the month"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad Request",
                  "message": "Invalid input"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CreateUser": {
        "type": "object",
        "properties": {
          
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["email", "password"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "securepassword"
          }
        },
        "required": ["email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60b8c49f6c3e3a1f5c8b4567"
              },
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "john.doe@example.com"
              },
              "avatarUrl": {
                "type": "string",
                "example": "http://example.com/avatar.jpg"
              },
              "gender": {
                "type": "string",
                "example": "male"
              },
              "weight": {
                "type": "number",
                "example": 75
              },
              "activeTime": {
                "type": "number",
                "example": 30
              },
              "liters": {
                "type": "number",
                "example": 2.5
              }
            }
          }
        }
      },

      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["email", "password"]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "weight": {
            "type": "number",
            "example": 75
          },
          "activeTime": {
            "type": "number",
            "example": 30
          },
          "liters": {
            "type": "number",
            "example": 2.5
          },
          "avatarURL": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "WaterData": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": ["date", "amount"]
      }
    }
  }
}

