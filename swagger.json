{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "User and Water API",
    "description": "API для управления пользователями и водным потреблением"
  },
  "servers": [
    {
      "url": "https://aquatrack-api-crcb.onrender.com",
      "description": "Main server"
    }
  ],
  "paths": {
    "/api/users/google": {
      "get": {
        "summary": "Initiate Google OAuth",
        "description": "Redirects the user to Google's OAuth 2.0 server for authentication.",
        "tags": ["User Management"],
        "responses": {
          "302": {
            "description": "Redirect to Google's OAuth 2.0 server",
            "headers": {
              "Location": {
                "description": "URL to Google's OAuth 2.0 server",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
"/api/users/google-redirect": {
  "get": {
    "summary": "Handle Google OAuth redirect",
    "description": "Handles the redirect from Google OAuth, processes the authorization code, and logs in or registers the user.",
    "tags": ["User Management"],
    "parameters": [
      {
        "name": "code",
        "in": "query",
        "required": true,
        "description": "Authorization code received from Google",
        "schema": {
          "type": "string"
        }
      }
    ],
    "responses": {
      "302": {
        "description": "Redirect to frontend with authentication token",
        "headers": {
          "Location": {
            "description": "URL to redirect the user with the authentication token",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error - An error occurred during the authentication process",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    }
  }
},
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user and sends a verification email.",
        "tags": ["User Management"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password."
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "The registered user's email address."
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "description": "The access token for the newly registered user."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "The refresh token for the newly registered user."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating what went wrong."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating the user already exists."
                    }
                  }
                }
              }
            }
          }
        }
      
    }
  },
  "/api/users/verify/{verificationToken}": {
      "get": {
        "summary": "Verify user",
        "description": "Verifies a user based on the provided verification token.",
        "tags": ["User Management"],
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "description": "Verification token sent to the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or invalid verification token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found or invalid verification token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred during the verification process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify": {
      "get": {
        "summary": "Send verification email",
        "description": "Sends a verification email to the user if they are not verified.",
        "tags": ["User Management"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email of the user to send the verification to",
                    "example": "user@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found or already verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found or already verified"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred during the verification process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User Management"],
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "example": {
                  "summary": "Example login request",
                  "value": {
                    "email": "john.doe@example.com",
                    "password": "securepassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "error": "Bad Request",
                  "message": "Invalid email or password format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized",
                  "message": "Invalid email or password, or account not verified"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error",
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/refresh": {
      "get": {
        "summary": "Refresh user tokens",
        "description": "Refreshes the access and refresh tokens for the currently authenticated user.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The new access token."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "The new refresh token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating unauthorized access."
                    }
                  }
                }
              }
            }
          }
        }
      
    }
  },
    "/api/users/logout": {
      "post": {
        "summary": "Log out the current user",
        "description": "Logs out the currently authenticated user and invalidates their tokens.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - User logged out successfully",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating unauthorized access."
                    }
                  }
                }
              }
            }
          }
        }
      }
    
  },
    "/api/users/current": {
      "get": {
        "summary": "Get current user information",
        "tags": ["User Management"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60b8c49f6c3e3a1f5c8b4567"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "http://example.com/avatar.jpg"
                    },
                    "gender": {
                      "type": "string",
                      "example": "male"
                    },
                    "weight": {
                      "type": "number",
                      "example": 75
                    },
                    "activeTime": {
                      "type": "number",
                      "example": 30
                    },
                    "liters": {
                      "type": "number",
                      "example": 2.5
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    
  },
    "/api/users/{userId}": {
      "put": {
        "summary": "Update user details",
        "description": "Updates the details of a user by user ID. Allows for updating avatar image.",
        "tags": ["User Management"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "The user's avatar image"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "The updated user's email address"
                    },
                    "avatarURL": {
                      "type": "string",
                      "description": "URL of the updated user's avatar"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating the user was not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "summary": "Fetch all users",
        "description": "Retrieves a list of users, optionally limited by a query parameter.",
        "tags": ["User Management"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Maximum number of users to return",
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "avatarURL": {
                            "type": "string",
                            "description": "URL of the user's avatar"
                          }
                        }
                      }
                    },
                    "totalUsers": {
                      "type": "integer",
                      "description": "Total number of users"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating invalid query parameter"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },


"/api/water": {
  "post": {
    "summary": "Create a water record",
    "description": "Creates a new water record for the authenticated user.",
    "tags": ["Water"],
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "date": {
                "type": "integer",
                "description": "Unix timestamp for the date of the water record",
                "example": 1627893600000
              },
              "amount": {
                "type": "integer",
                "description": "Amount of water in milliliters",
                "example": 500
              }
            },
            "required": ["date", "amount"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Water record created successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109ca"
                },
                "date": {
                  "type": "integer",
                  "example": 1627893600000
                },
                "amount": {
                  "type": "integer",
                  "example": 500
                },
                "owner": {
                  "type": "string",
                  "example": "60d0fe4f5311236168a109cb"
                },
                "__v": {
                  "type": "integer",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid request body",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Validation error: ..."
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An error occurred while creating the water record"
                }
              }
            }
          }
        }
      }
    }
  }

},
    "/api/water/{id}": {
      "put": {
        "summary": "Update a water record",
        "description": "Updates a specific water record of the authenticated user.",
        "tags": ["Water"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the water record to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "integer",
                    "description": "The date of the water record in Unix timestamp"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The amount of water consumed in milliliters"
                  }
                },
                "required": []
              },
              "examples": {
                "example1": {
                  "summary": "A sample water record update",
                  "value": {
                    "date": 1627893600000,
                    "amount": 750
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60d0fe4f5311236168a109ca"
                    },
                    "date": {
                      "type": "integer",
                      "example": 1627893600000
                    },
                    "amount": {
                      "type": "integer",
                      "example": 750
                    },
                    "owner": {
                      "type": "string",
                      "example": "60d0fe4f5311236168a109cb"
                    },
                    "__v": {
                      "type": "integer",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Water record not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Water record not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred while updating the water record"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/water/":{
      "get": {
        "summary": "Get today's total water consumption",
        "description": "Fetches the total amount of water consumed by the authenticated user today.",
        "tags": ["Water"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the total water consumption for today",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalAmount": {
                      "type": "integer",
                      "example": 1500,
                      "description": "The total amount of water consumed today in milliliters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred while retrieving the total water consumption"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/water/day/{date}": {
      "get": {
        "summary": "Get water consumption for a specific day",
        "description": "Fetches the total amount of water consumed by the authenticated user on a specific day.",
        "tags": ["Water"],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-07-19",
              "description": "The date for which to fetch the water consumption in YYYY-MM-DD format."
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the total water consumption for the specified day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalAmount": {
                      "type": "integer",
                      "example": 1200,
                      "description": "The total amount of water consumed on the specified day in milliliters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred while retrieving the water consumption"
                    }
                  }
                }
              }
            }
          }
        }
    }
  },
    "/api/water/month/{date}": {
      "get": {
        "summary": "Get water consumption for a specific month",
        "description": "Fetches the daily water consumption for the specified month, aggregated by day.",
        "tags": ["Water"],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-07-01",
              "description": "The month for which to fetch water consumption data, formatted as YYYY-MM-01. Use Unix timestamp in milliseconds."
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the daily water consumption for the specified month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateParam": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date for which the daily water consumption is reported, in ISO 8601 format."
                      },
                      "totalDayWater": {
                        "type": "integer",
                        "description": "The total amount of water consumed on that day in milliliters."
                      }
                    },
                    "example": {
                      "dateParam": "2024-07-01T00:00:00.000Z",
                      "totalDayWater": 1200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid date format or date out of range.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid date format or Date must start from 2024/01/01 or Date from future"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred while retrieving the monthly water consumption"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CreateUser": {
        "type": "object",
        "properties": {
          
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["email", "password"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "securepassword"
          }
        },
        "required": ["email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60b8c49f6c3e3a1f5c8b4567"
              },
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "john.doe@example.com"
              },
              "avatarUrl": {
                "type": "string",
                "example": "http://example.com/avatar.jpg"
              },
              "gender": {
                "type": "string",
                "example": "male"
              },
              "weight": {
                "type": "number",
                "example": 75
              },
              "activeTime": {
                "type": "number",
                "example": 30
              },
              "liters": {
                "type": "number",
                "example": 2.5
              }
            }
          }
        }
      },

      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["email", "password"]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "weight": {
            "type": "number",
            "example": 75
          },
          "activeTime": {
            "type": "number",
            "example": 30
          },
          "liters": {
            "type": "number",
            "example": 2.5
          },
          "avatarURL": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "WaterData": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": ["date", "amount"]
      }
    }
  }
}

